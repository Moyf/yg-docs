name: Deploy VitePress site to Pages

on:
  push:
    branches: [master]
  workflow_dispatch:

# 并发控制
concurrency:
  group: deploy-docs
  cancel-in-progress: false

env:
  NODE_ENV: production
  DIST_DIR: docs/.vitepress/dist

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 添加构建缓存
      - name: Cache VitePress
        uses: actions/cache@v3
        with:
          path: |
            docs/.vitepress/cache
            docs/.vitepress/dist
          key: ${{ runner.os }}-vitepress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-vitepress-

      - name: Install dependencies
        run: |
          npm ci
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Dependencies installed successfully"

      - name: Build with VitePress
        run: |
          npm run docs:build
          echo "Build completed successfully"
          ls -la "$DIST_DIR"
      
      - name: Copy configuration files to build directory
        run: |
          # 定义需要复制的文件列表  
          FILES_TO_COPY=(
            "vercel.json"
            "CNAME"
            ".nojekyll"
          )

          # 遍历文件列表并复制存在的文件
          for file in "${FILES_TO_COPY[@]}"; do
            if [ -f "$file" ]; then
              echo "Copying $file to $DIST_DIR/"
              cp "$file" "$DIST_DIR/"
            else
              echo "File $file not found, skipping"
            fi
          done
          
          # 创建 .nojekyll 文件（如果不存在）
          touch "$DIST_DIR/.nojekyll"
          
      - name: Deploy to docs repository
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          TARGET_REPO: ravenhogwarts/docs
        run: |
          cd "$DIST_DIR"
          
          # 检查构建产物是否存在
          if [ ! -f "index.html" ]; then
            echo "Error: Build artifacts not found"
            exit 1
          fi
          
          git init
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          
          # 检查是否有变更
          if git diff --staged --quiet; then
            echo "No changes to deploy"
            exit 0
          fi
          
          git commit -m "Deploy documentation updates - $(date +'%Y-%m-%d %H:%M:%S')"
          git push -f "https://${DEPLOY_TOKEN}@github.com/${TARGET_REPO}.git" HEAD:gh-pages
          
          echo "Deployment completed successfully"
          echo "GitHub Pages URL: https://ravenhogwarts.github.io/docs/"